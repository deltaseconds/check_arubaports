#!/usr/bin/perl -w
use strict;
use warnings;
use Net::SNMP;
use Getopt::Long;

my ($hostname, $community, $snmp_ver, $port) = ('', 'public', '2c', 161);

GetOptions(
    'hostname=s'  => \$hostname,
    'community=s' => \$community,
    'version=s'   => \$snmp_ver,
    'port=i'      => \$port,
    'help'        => sub { usage(); }
);

usage() unless $hostname;

sub usage {
    print "Usage: $0 --hostname <switch_ip> [--community <string>] [--version <snmp_version>] [--port <port_number>]\n";
    exit 3;
}

sub format_bytes {
    my ($bytes) = @_;
    my @units = ('B', 'KB', 'MB', 'GB', 'TB');
    my $unit = shift @units;
    while ($bytes >= 1024 && @units) {
        $bytes /= 1024;
        $unit = shift @units;
    }
    return sprintf("%.2f %s", $bytes, $unit);
}

my ($session, $error) = Net::SNMP->session(
    -hostname  => $hostname,
    -community => $community,
    -version   => $snmp_ver,
    -port      => $port,
    -timeout   => 5
);

die "UNKNOWN: SNMP session failed: $error\n" unless $session;

# OID tabke
my %oids = (
    ifDescr      => '1.3.6.1.2.1.2.2.1.2',   # Interface description
    ifOperStatus => '1.3.6.1.2.1.2.2.1.8',   # Operational status (1=UP, 2=DOWN)
    ifInOctets   => '1.3.6.1.2.1.2.2.1.10',  # Incoming traffic in bytes
    ifOutOctets  => '1.3.6.1.2.1.2.2.1.16'   # Outgoing traffic in bytes
);


my %data;
foreach my $key (keys %oids) {
    my $result = $session->get_table(-baseoid => $oids{$key});
    if (!defined $result) {
        warn "WARNING: Failed to fetch SNMP data for $key: " . $session->error() . "\n";
        next;
    }
    $data{$key} = $result;
}
$session->close();



foreach my $oid (sort keys %{$data{ifDescr}}) {
    my ($index) = $oid =~ /\.(\d+)$/;
    
    my $status  = ($data{ifOperStatus}{"$oids{ifOperStatus}.$index"} == 1) ? 'UP' : 'DOWN';
    my $rx      = format_bytes($data{ifInOctets}{"$oids{ifInOctets}.$index"} // 0);
    my $tx      = format_bytes($data{ifOutOctets}{"$oids{ifOutOctets}.$index"} // 0);

    print "$data{ifDescr}{$oid}: $status | IN: $rx, OUT: $tx\n";
}

exit 0;

